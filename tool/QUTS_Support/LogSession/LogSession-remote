#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.14.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from LogSession import LogSession
from LogSession.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  ErrorType getLastError()')
    print('  ErrorCode destroyLogSession()')
    print('   getDeviceList()')
    print('   getProtocolList(i64 deviceHandle)')
    print('  i64 getDataPacketCount(i64 protocolHandle)')
    print('  ErrorCode createDataView(string viewName, DataPacketFilter filter, PacketReturnConfig returnConfig)')
    print('  ErrorCode createDefaultDataView(string viewName,  protocolHandleList, PacketReturnConfig returnConfig)')
    print('  ErrorCode createDataViewSet( dataViewDefinitions)')
    print('  ErrorCode removeDataView(string viewName)')
    print('  i32 getDataViewItemCount(string viewName)')
    print('   getDataViewItems(string viewName, PacketRange packets)')
    print('  ErrorCode saveDataViewItemsByIndex(string viewName, string destinationFolder,  dataViewIndexes)')
    print('  ErrorCode saveDataViewItemsByIndexWithFilenames(string viewName,  dataViewIndexes,  logNamesByHandle)')
    print('   saveLogFiles(string saveFolder)')
    print('  string getDurationByProtocol(i64 protocolHandle)')
    print('  ErrorCode updatePacketFilters(string viewName, DataPacketFilter filter, ViewConfigurationUpdate updateType)')
    print('  ErrorCode updatePacketReturnConfig(string viewName, PacketReturnConfig returnConfig)')
    print('  DataPacketFilter getAvailablePacketIds(i64 protocolHandle)')
    print('  LogSessionInformation getLogSessionInformation( protocolHandle)')
    print('  void loadQShrinkFile(i64 protocolHandle, string pathName)')
    print('  i64 getDataViewItemIndex(string viewName, i64 sessionIndex)')
    print('  i64 getTimeStampTodAdjustedByDataviewIndexForAnnotations(string viewName, i64 dataviewIndex)')
    print('   getDataViewItemsForConfiguration(string viewName, PacketRange packets, PacketReturnConfig returnConfig)')
    print('  ClientSessionInfo getClientSessionInfo()')
    print('  ErrorCode createSubDataView(string viewName, string parentViewName, DataPacketFilter filter, PacketRange packets, PacketReturnConfig returnConfig)')
    print('  ErrorCode setWcdmaProtocolRevision(i64 protocolHandle, WcdmaProtocolRevision revision)')
    print('  ErrorCode setCdmaProtocolRevision(i64 protocolHandle, CdmaProtocolRevision revision)')
    print('  ErrorCode setPilotInc(i64 protocolHandle, i16 pilotInc)')
    print('  i16 getBandClass(i64 protocolHandle, i64 protocolIndex)')
    print('  CdmaProtocolRevision getCdmaProtocolRevision(i64 protocolHandle, i64 protocolIndex)')
    print('  i16 getModel(i64 protocolHandle, i64 protocolIndex)')
    print('  WcdmaProtocolRevision getWcdmaProtocolRevision(i64 protocolHandle, i64 protocolIndex)')
    print('   getDecryptionKeyStatus(i64 protocolHandle)')
    print('  void saveMbnToFolder(i64 protocolHandle, string filePath)')
    print('  i64 getDecryptionFailureCount(i64 protocolHandle)')
    print('  ErrorCode saveDataViewWithOptions(SaveDataViewSettings saveDataViewSettings)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = LogSession.Client(protocol)
transport.open()

if cmd == 'getLastError':
    if len(args) != 0:
        print('getLastError requires 0 args')
        sys.exit(1)
    pp.pprint(client.getLastError())

elif cmd == 'destroyLogSession':
    if len(args) != 0:
        print('destroyLogSession requires 0 args')
        sys.exit(1)
    pp.pprint(client.destroyLogSession())

elif cmd == 'getDeviceList':
    if len(args) != 0:
        print('getDeviceList requires 0 args')
        sys.exit(1)
    pp.pprint(client.getDeviceList())

elif cmd == 'getProtocolList':
    if len(args) != 1:
        print('getProtocolList requires 1 args')
        sys.exit(1)
    pp.pprint(client.getProtocolList(eval(args[0]),))

elif cmd == 'getDataPacketCount':
    if len(args) != 1:
        print('getDataPacketCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.getDataPacketCount(eval(args[0]),))

elif cmd == 'createDataView':
    if len(args) != 3:
        print('createDataView requires 3 args')
        sys.exit(1)
    pp.pprint(client.createDataView(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'createDefaultDataView':
    if len(args) != 3:
        print('createDefaultDataView requires 3 args')
        sys.exit(1)
    pp.pprint(client.createDefaultDataView(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'createDataViewSet':
    if len(args) != 1:
        print('createDataViewSet requires 1 args')
        sys.exit(1)
    pp.pprint(client.createDataViewSet(eval(args[0]),))

elif cmd == 'removeDataView':
    if len(args) != 1:
        print('removeDataView requires 1 args')
        sys.exit(1)
    pp.pprint(client.removeDataView(args[0],))

elif cmd == 'getDataViewItemCount':
    if len(args) != 1:
        print('getDataViewItemCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.getDataViewItemCount(args[0],))

elif cmd == 'getDataViewItems':
    if len(args) != 2:
        print('getDataViewItems requires 2 args')
        sys.exit(1)
    pp.pprint(client.getDataViewItems(args[0], eval(args[1]),))

elif cmd == 'saveDataViewItemsByIndex':
    if len(args) != 3:
        print('saveDataViewItemsByIndex requires 3 args')
        sys.exit(1)
    pp.pprint(client.saveDataViewItemsByIndex(args[0], args[1], eval(args[2]),))

elif cmd == 'saveDataViewItemsByIndexWithFilenames':
    if len(args) != 3:
        print('saveDataViewItemsByIndexWithFilenames requires 3 args')
        sys.exit(1)
    pp.pprint(client.saveDataViewItemsByIndexWithFilenames(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'saveLogFiles':
    if len(args) != 1:
        print('saveLogFiles requires 1 args')
        sys.exit(1)
    pp.pprint(client.saveLogFiles(args[0],))

elif cmd == 'getDurationByProtocol':
    if len(args) != 1:
        print('getDurationByProtocol requires 1 args')
        sys.exit(1)
    pp.pprint(client.getDurationByProtocol(eval(args[0]),))

elif cmd == 'updatePacketFilters':
    if len(args) != 3:
        print('updatePacketFilters requires 3 args')
        sys.exit(1)
    pp.pprint(client.updatePacketFilters(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'updatePacketReturnConfig':
    if len(args) != 2:
        print('updatePacketReturnConfig requires 2 args')
        sys.exit(1)
    pp.pprint(client.updatePacketReturnConfig(args[0], eval(args[1]),))

elif cmd == 'getAvailablePacketIds':
    if len(args) != 1:
        print('getAvailablePacketIds requires 1 args')
        sys.exit(1)
    pp.pprint(client.getAvailablePacketIds(eval(args[0]),))

elif cmd == 'getLogSessionInformation':
    if len(args) != 1:
        print('getLogSessionInformation requires 1 args')
        sys.exit(1)
    pp.pprint(client.getLogSessionInformation(eval(args[0]),))

elif cmd == 'loadQShrinkFile':
    if len(args) != 2:
        print('loadQShrinkFile requires 2 args')
        sys.exit(1)
    pp.pprint(client.loadQShrinkFile(eval(args[0]), args[1],))

elif cmd == 'getDataViewItemIndex':
    if len(args) != 2:
        print('getDataViewItemIndex requires 2 args')
        sys.exit(1)
    pp.pprint(client.getDataViewItemIndex(args[0], eval(args[1]),))

elif cmd == 'getTimeStampTodAdjustedByDataviewIndexForAnnotations':
    if len(args) != 2:
        print('getTimeStampTodAdjustedByDataviewIndexForAnnotations requires 2 args')
        sys.exit(1)
    pp.pprint(client.getTimeStampTodAdjustedByDataviewIndexForAnnotations(args[0], eval(args[1]),))

elif cmd == 'getDataViewItemsForConfiguration':
    if len(args) != 3:
        print('getDataViewItemsForConfiguration requires 3 args')
        sys.exit(1)
    pp.pprint(client.getDataViewItemsForConfiguration(args[0], eval(args[1]), eval(args[2]),))

elif cmd == 'getClientSessionInfo':
    if len(args) != 0:
        print('getClientSessionInfo requires 0 args')
        sys.exit(1)
    pp.pprint(client.getClientSessionInfo())

elif cmd == 'createSubDataView':
    if len(args) != 5:
        print('createSubDataView requires 5 args')
        sys.exit(1)
    pp.pprint(client.createSubDataView(args[0], args[1], eval(args[2]), eval(args[3]), eval(args[4]),))

elif cmd == 'setWcdmaProtocolRevision':
    if len(args) != 2:
        print('setWcdmaProtocolRevision requires 2 args')
        sys.exit(1)
    pp.pprint(client.setWcdmaProtocolRevision(eval(args[0]), eval(args[1]),))

elif cmd == 'setCdmaProtocolRevision':
    if len(args) != 2:
        print('setCdmaProtocolRevision requires 2 args')
        sys.exit(1)
    pp.pprint(client.setCdmaProtocolRevision(eval(args[0]), eval(args[1]),))

elif cmd == 'setPilotInc':
    if len(args) != 2:
        print('setPilotInc requires 2 args')
        sys.exit(1)
    pp.pprint(client.setPilotInc(eval(args[0]), eval(args[1]),))

elif cmd == 'getBandClass':
    if len(args) != 2:
        print('getBandClass requires 2 args')
        sys.exit(1)
    pp.pprint(client.getBandClass(eval(args[0]), eval(args[1]),))

elif cmd == 'getCdmaProtocolRevision':
    if len(args) != 2:
        print('getCdmaProtocolRevision requires 2 args')
        sys.exit(1)
    pp.pprint(client.getCdmaProtocolRevision(eval(args[0]), eval(args[1]),))

elif cmd == 'getModel':
    if len(args) != 2:
        print('getModel requires 2 args')
        sys.exit(1)
    pp.pprint(client.getModel(eval(args[0]), eval(args[1]),))

elif cmd == 'getWcdmaProtocolRevision':
    if len(args) != 2:
        print('getWcdmaProtocolRevision requires 2 args')
        sys.exit(1)
    pp.pprint(client.getWcdmaProtocolRevision(eval(args[0]), eval(args[1]),))

elif cmd == 'getDecryptionKeyStatus':
    if len(args) != 1:
        print('getDecryptionKeyStatus requires 1 args')
        sys.exit(1)
    pp.pprint(client.getDecryptionKeyStatus(eval(args[0]),))

elif cmd == 'saveMbnToFolder':
    if len(args) != 2:
        print('saveMbnToFolder requires 2 args')
        sys.exit(1)
    pp.pprint(client.saveMbnToFolder(eval(args[0]), args[1],))

elif cmd == 'getDecryptionFailureCount':
    if len(args) != 1:
        print('getDecryptionFailureCount requires 1 args')
        sys.exit(1)
    pp.pprint(client.getDecryptionFailureCount(eval(args[0]),))

elif cmd == 'saveDataViewWithOptions':
    if len(args) != 1:
        print('saveDataViewWithOptions requires 1 args')
        sys.exit(1)
    pp.pprint(client.saveDataViewWithOptions(eval(args[0]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
